// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: searchID.sql

package db

import (
	"context"
)

const getAdminIDByEmail = `-- name: GetAdminIDByEmail :one
SELECT adminID FROM Admin WHERE email = ?
`

func (q *Queries) GetAdminIDByEmail(ctx context.Context, email string) (int32, error) {
	row := q.db.QueryRowContext(ctx, getAdminIDByEmail, email)
	var adminid int32
	err := row.Scan(&adminid)
	return adminid, err
}

const getDeveloperIDByEmail = `-- name: GetDeveloperIDByEmail :one
SELECT developerID FROM Developer WHERE email = ?
`

func (q *Queries) GetDeveloperIDByEmail(ctx context.Context, email string) (int32, error) {
	row := q.db.QueryRowContext(ctx, getDeveloperIDByEmail, email)
	var developerid int32
	err := row.Scan(&developerid)
	return developerid, err
}

const getMemberIDByEmail = `-- name: GetMemberIDByEmail :one
SELECT memberID FROM Member WHERE email = ?
`

func (q *Queries) GetMemberIDByEmail(ctx context.Context, email string) (int32, error) {
	row := q.db.QueryRowContext(ctx, getMemberIDByEmail, email)
	var memberid int32
	err := row.Scan(&memberid)
	return memberid, err
}
